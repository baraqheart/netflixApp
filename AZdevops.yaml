trigger:
- master 

pool:
  vmImage: ubuntu-latest

variables:  
  DOCKER_SERVICE_CONNECTION: 'docker-servcon'
  ACR_SERVICE_CONNECTION: 'acr-servcon'

jobs:
- job: Checkout
  steps:
    

- job: SonarQube
  
  step:
  # Prepare Analysis Configuration task
  - task: SonarQubePrepare@6
    displayName: 'SonarQube code analysis'
    inputs:
      SonarQube: 'YourSonarqubeServerEndpoint'
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: 'YourProjectKey' 

- job: Quality gate
  dependsOn: SonarQube
  steps:
  # Run Code Analysis task
  - task: SonarQubeAnalyze@6
    displayName: 'run code analysis task'
    inputs:
      jdkversion: 'JAVA_HOME_17_X64'

  # Publish Quality Gate Result task
  - task: SonarQubePublish@6
    displayName: 'publish quality gate result task'
    inputs:
      pollingTimeoutSec: '300'


- job: Dependencies 
  steps:
  # npm v1
  # Install and publish npm packages
  - task: Npm@1
    displayName: 'install and publish dependencies'
    inputs:
      command: 'install' 
      workingDir: '.'
       
     
#- job: OWASP
#  steps:


- job: Trivy FS  
  steps:
  displayName: 'run file scan using trivy'
  - task: trivy@1
    inputs:
      path: .

- job: Build n Push
  steps:
  - task : Docker@2
    displayName: 'login in to docker registry'
    inputs:
      containerRegistry: $DOCKER_SERVICE_CONNECTION
      command: 'login'

  - task : Docker@2
    displayName: 'login to acr registry'
    inputs:
      containerRegistry: $ACR_SERVICE_CONNECTION
      command: 'login'

  # Build docker image
  - task: Docker@2
    displayName: 'build and push image to registries'
    inputs:              
      command: 'buildAndPush'      
      Dockerfile: './Dockerfile'
       
      repository: |
        'app/netflixApp'
        'beeygold/netflixApp'
      
    
- job: Scan Image
  steps:
  - task: trivy@1
    displayName: 'run image scan using trivy'
    inputs:
      image: beeygold/netflixApp

#- job: Deploy 

#- job: Deploy k8s     



